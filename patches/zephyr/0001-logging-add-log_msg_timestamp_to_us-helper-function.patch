From 080b2191bc84eba204f02bd52de27c9c4859f21d Mon Sep 17 00:00:00 2001
From: Marcin Niestroj <m.niestroj@grinn-global.com>
Date: Thu, 4 Mar 2021 21:10:43 +0100
Subject: [PATCH] logging: add log_msg_timestamp_to_us() helper function

So far we only have log_msg_timestamp_get() function, which returns
internal timestamp representation. This is either clock cycles or uptime
in ms, depending on main clock precision.

Introduce log_msg_timestamp_to_us() helper function, which allows to
convert internal logging timestamp to us.

PR: https://github.com/zephyrproject-rtos/zephyr/pull/32893

Signed-off-by: Marcin Niestroj <m.niestroj@grinn-global.com>
---
 include/logging/log_msg.h   | 8 ++++++++
 subsys/logging/log_output.c | 7 +++++++
 2 files changed, 15 insertions(+)

diff --git a/include/logging/log_msg.h b/include/logging/log_msg.h
index 892d3f9856..826cdc0a7d 100644
--- a/include/logging/log_msg.h
+++ b/include/logging/log_msg.h
@@ -225,6 +225,14 @@ static inline uint32_t log_msg_timestamp_get(struct log_msg *msg)
 	return msg->hdr.timestamp;
 }
 
+/** @brief Convert timestamp of the message to us.
+ *
+ * @param timestamp Message timestamp
+ *
+ * @return Timestamp value in us.
+ */
+uint64_t log_msg_timestamp_to_us(uint32_t timestamp);
+
 /** @brief Check if message is of standard type.
  *
  * @param msg Message
diff --git a/subsys/logging/log_output.c b/subsys/logging/log_output.c
index 0050041fd5..6f8fccd8f4 100644
--- a/subsys/logging/log_output.c
+++ b/subsys/logging/log_output.c
@@ -153,6 +153,13 @@ void log_output_flush(const struct log_output *log_output)
 	log_output->control_block->offset = 0;
 }
 
+uint64_t log_msg_timestamp_to_us(uint32_t timestamp)
+{
+	timestamp /= timestamp_div;
+
+	return ((uint64_t) timestamp * 1000000U) / freq;
+}
+
 static int timestamp_print(const struct log_output *log_output,
 			   uint32_t flags, uint32_t timestamp)
 {
-- 
2.30.1

